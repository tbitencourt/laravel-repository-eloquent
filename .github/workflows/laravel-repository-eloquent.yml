#Laravel Setup, PHP Code Quality Detectors and PHP Unit Tests
name: CI Jobs

on: [ push, pull_request ]

jobs:

  job:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [
          7.0.*,
          7.1.*,
          7.3.*,
          7.4.*,
        ]
        laravel: [
          6.*,
          7.*
        ]
        dependency-version: [prefer-stable]

    name: PHP ${{ matrix.php }} / Laravel ${{ matrix.laravel }} (${{ matrix.dependency-version }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Git Fetch
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      #    git checkout dev
      #    git switch -
      #    git rev-parse --verify origin/dev
      #    #git merge-base HEAD origin/dev

      - name: Lint
        run: bash .dev/health/lint.sh

      - name: Copy/Paste Detector
        run: bash .dev/health/phpcpd.sh

      - name: Mess Detector
        run: bash .dev/health/phpmd.sh

      - name: Code Sniffer
        run: bash .dev/health/phpcs.sh

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.qa', '.env');"

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create SQLite Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: bash .dev/health/unit-tests.sh
